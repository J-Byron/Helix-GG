{"version":3,"sources":["components/LoginButton/LoginButton.jsx","components/LoginDropDown/LoginDropDown.jsx","components/ProfileComponent/ProfileComponent.jsx","components/Nav/ReviewDropDown/ReviewDropDown.jsx","components/Nav/Nav.js","components/HomePage/HomePage.jsx","components/Footer/Footer.js","components/SummonerPage/SummonerSummary/SummonerReviewComponent/ReviewListItem/ReviewListItem.jsx","components/SummonerPage/SummonerSummary/SummonerReviewComponent/SummonerReviewComponent.jsx","components/SummonerPage/SummonerSummary/SummonerSummary.jsx","components/SummonerPage/SummonerGameSummary/TopChampionList/TopChampionItem.jsx","components/SummonerPage/SummonerGameSummary/TopChampionList/TopChampionList.jsx","components/SummonerPage/SummonerGameSummary/SummonerGameSummary.jsx","components/SummonerPage/SummonerHistory/SummonerHistoryList/SummonerHistoryItem/SummonerHistoryItem.jsx","components/SummonerPage/SummonerHistory/SummonerHistoryList/SummonerHistoryList.jsx","components/SummonerPage/SummonerHistory/SummonerHistory.jsx","components/SummonerPage/SummonerPage.jsx","components/ProfilePage/ProfileReviewsList/ProfileReviewsItem/ProfileReviewsItem.jsx","components/ProfilePage/ProfileReviewsList/ProfileReviewsList.jsx","components/ProfilePage/ProfileFavoritesList/ProfileFavoriteItem/ProfileFavoriteItem.jsx","components/ProfilePage/ProfileFavoritesList/ProfileFavoritesList.jsx","components/ProfilePage/ProfilePage.jsx","components/ProtectedRoute/ProtectedRoute.js","components/App/App.js","redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/summonerReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/summonerSaga.js","redux/sagas/index.js","index.js"],"names":["LoginButton","react_default","a","createElement","className","onClick","this","props","toggleLoginDropDown","Component","LoginDropDown","state","loginUsername","loginPassword","registerUsername","registerPassword","comfirmRegisterPassword","emailInput","handleLoginClick","_this","console","log","dispatch","type","payload","username","password","user","id","handleRegisterClick","email","handleFieldChange","event","setState","Object","defineProperty","target","name","value","_React$createElement","register","style","textAlign","errors","registrationMessage","onChange","margin","marginTop","placeholder","loginMessage","marginBottom","toggleRegisterDropDown","connect","reduxStore","ProfileComponent","showMenu","handleIconClick","handleProfileClick","history","push","handleThemeClick","handleSettingsClick","handleLogoutClick","react_transition_group","in","appear","timeout","classNames","mountOnEnter","unmountOnExit","withRouter","ReviewDropDown","rating","reviewContent","handleSubmitDidClick","summonerName","userId","disableUserReview","handleRatingClick","handleInputChange","ratingRuleFor","_this2","showReviewForm","maxLength","Nav","appearLogin","appearRegister","handleReviewPlayerClick","canLeaveReview","didReview","reviews","map","review","reviewed_summonerName","indexOf","summoner","summoner_Name","summonerDataDidLoad","cursor","display","components_ProfileComponent_ProfileComponent","components_LoginButton_LoginButton","components_LoginDropDown_LoginDropDown","Nav_ReviewDropDown_ReviewDropDown","isLoaded","HomePage","usernameInput","selectedRegion","isSearching","handleChange","handleSubmissionClick","queryParameters","region","handleLoading","justifyContent","spellCheck","Footer","ReviewListItem","hasContent","content","hasReviewerIdentity","backgroundColor","concat","borderColor","boxShadow","SummonerReviewComponent","length","index","SummonerReviewComponent_ReviewListItem_ReviewListItem","key","store","SummonerSummary","handleFavoriteClick","profileIcon","canFavorite","favorites","player","hasData","summonerHistory","hasOwnProperty","_ref","matchResults","wins","losses","backgroundImage","rank","SummonerSummary_SummonerReviewComponent_SummonerReviewComponent","TopChampionItem","champion","icon","width","winrate","totalGamesPlayed","loses","kdar","averageKills","averageDeaths","averageAssists","TopChampionList","champions","i","SummonerGameSummary_TopChampionList_TopChampionItem","SummonerGameSummary","_ref2","KDA","kills","deaths","assists","pie","data","label","top","right","bottom","left","innerRadius","cornerRadius","colors","colorBy","enableRadialLabels","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","isInteractive","animate","motionStiffness","motionDamping","SummonerGameSummary_TopChampionList_TopChampionList","top3ChampData","summonerHistoryResults","SummonerHistoryItem","_props$match","match","cs","items","kda","result","matchParticipants","runes","spells","time","flexDirection","spell1Icon","spell2Icon","marginLeft","mainIcon","subIcon","fontFamily","fontSize","color","verticalAlign","letterSpacing","height","SummonerHistoryList","matches","SummonerHistoryList_SummonerHistoryItem_SummonerHistoryItem","matchHistory","SummonerHistory_SummonerHistoryList_SummonerHistoryList","SummonerPage","SummonerPage_SummonerSummary_SummonerSummary","SummonerPage_SummonerGameSummary_SummonerGameSummary","SummonerPage_SummonerHistory_SummonerHistory","ProfileReviewsItem","detailIsVisible","itemReview","itemRating","itemId","resetState","handleSaveClick","reviewId","reviewRating","handleDeleteClick","handleContentChange","cell","transition","readOnly","rows","ProfileReviewsList","ProfileReviewsList_ProfileReviewsItem_ProfileReviewsItem","ProfileFavoriteItem","favorite","user_id","summoner_profile_icon","ProfileFavoritesList","ProfileFavoritesList_ProfileFavoriteItem_ProfileFavoriteItem","ProfilePage","ProfilePage_ProfileReviewsList_ProfileReviewsList","ProfilePage_ProfileFavoritesList_ProfileFavoritesList","loginMode","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","App","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","to","path","render","components_SummonerPage_SummonerPage","components_ProtectedRoute_ProtectedRoute","components_Footer_Footer","combineReducers","arguments","undefined","userReducer","userSummonerName","action","objectSpread","summonerReducer","rootReducer","loginUser","logoutUser","loginSaga","config","regenerator_default","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","response","status","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","postReview","updateUserReview","deleteUserReview","fetchUserReviews","postFavoriteSummoner","fetchFavorites","deleteFavorite","userSaga","get","sent","userSaga_marked","_action$payload","userSaga_marked2","_action$payload2","userSaga_marked3","_action$payload3","_context4","delete","_marked4","reviewRespnse","_context5","_marked5","_action$payload4","_context6","_marked6","favoritesResponse","_context7","_marked7","_action$payload5","_context8","_marked8","_context9","_marked9","fetchSummoner","fetchSummonerHistory","fetchSummonerReviews","summonerSaga","summonerResponseData","queueType","summonerSaga_marked","summonerHistoryResponse","summonerSaga_marked2","reviewsResponse","summonerSaga_marked3","takeEvery","summonerSaga_marked4","rootSaga","all","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","apply","run","ReactDOM","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ad6d4843.chunk.js","sourcesContent":["// *----------* Create React App *----------*\nimport React, { Component } from 'react';\n\n// *----------* Styling *----------*\nimport './LoginButton.css';\n\nclass LoginButton extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className='login-button' onClick={this.props.toggleLoginDropDown}>\n                    Login\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginButton;\n","// *----------* Create react *----------*\nimport React, { Component } from 'react';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Styling *----------*\nimport './LoginDropDown.css'\n\n// Responsible for Verifying user info\nclass LoginDropDown extends Component {\n\n    state = {\n        loginUsername: '',\n        loginPassword: '',\n        registerUsername: '',\n        registerPassword: '',\n        comfirmRegisterPassword: '',\n        emailInput: ''\n    }\n\n    componentWillMount() {\n        // Animate drop down\n        // console.log(this.props.appearRegister);\n\n        // console.log('Mounting!');\n    }\n\n    componentWillUnmount() {\n        // Animate un-drop-down?\n\n        // console.log('Unmounting!');\n    }\n\n    handleLoginClick = () => {\n        // DispatchToReducer\n        if (this.state.loginUsername && this.state.loginPassword) {\n            console.log(`Logging in`);\n            \n            this.props.dispatch({\n                type: 'LOGIN', payload: {\n                    username: this.state.loginUsername,\n                    password: this.state.loginPassword,\n                }\n            })\n\n            if(this.props.user.id){\n                this.props.toggleLoginDropDown();\n            }\n\n        } else {\n            // Render an error\n            console.log('Both fields must be filled');\n            this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n        }\n    }\n\n    handleRegisterClick = () => {\n        // Check if all fields\n        if (this.state.registerUsername && this.state.comfirmRegisterPassword) {\n            if (this.state.registerPassword === this.state.comfirmRegisterPassword) {\n                \n                console.log('registering');\n                console.log(this.state);\n                \n                this.props.dispatch({\n                    type: 'REGISTER',\n                    payload: {\n                        username: this.state.registerUsername,\n                        password: this.state.registerPassword,\n                        email: this.state.emailInput\n                    }\n                })\n                this.props.toggleLoginDropDown();\n                // this.props.toggleRegisterDropDown();\n            } else {\n                console.log('Passwords Do not match');\n\n            }\n        } else {\n            console.log('All fields must be filled!');\n        }\n    }\n\n    // set state by event...name to event...target\n    handleFieldChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n\n        // console.log(`${event.target.name} = ${event.target.value}`);\n        \n    }\n\n\n    render() {\n        return (\n            <div>\n                {\n                    this.props.register ?\n\n                        (\n                            <div className=\"dropDownMenu-register\">\n                                <div className=\"upper\">\n                                    <p className=\"login-text\" style={{ textAlign: 'center' }}>Register</p>\n                                    <p className=\"error-text\" style={{ textAlign: 'center' }}>{this.props.errors.registrationMessage}</p>\n                                    <input\n                                        className=\"input-text\"\n                                        name='registerUsername'\n                                        value={this.state.registerUsername}\n                                        onChange={this.handleFieldChange}\n                                        style={{ margin: \"0px auto 15px auto\", marginTop: \"20px\" }}\n                                        className=\"input-text\"\n                                        placeholder=\"Desired username\" \n                                        />\n                                    <input\n                                        className=\"input-text\"\n                                        name='registerPassword'\n                                        value={this.state.registerPassword}\n                                        onChange={this.handleFieldChange}\n                                        style={{ margin: \"0px auto 15px auto\" }}\n                                        type=\"password\"\n                                        placeholder=\"Password\" />\n                                    <input\n                                        className=\"input-text\"\n                                        name='comfirmRegisterPassword'\n                                        value={this.state.comfirmRegisterPassword}\n                                        onChange={this.handleFieldChange}\n                                        style={{ margin: \"0px auto 15px auto\" }}\n                                        type=\"password\"\n                                        placeholder=\"Retype password\" />\n                                    {/* <input style={{ margin: \"0px auto 15px auto\" }} className=\"input-text\" placeholder=\"Email\" /> */}\n                                </div>\n                                <div className=\"signin-button\" onClick={this.handleRegisterClick}>Register</div>\n                            </div>\n                        ) : (\n                            <div className=\"dropDownMenu\">\n                                <div className=\"upper\">\n                                    <p className=\"error-text\" style={{ textAlign: 'center' }}>{this.props.errors.loginMessage}</p>\n                                    <input\n                                        className=\"input-text\"\n                                        name='loginUsername'\n                                        value={this.state.loginUsername}\n                                        onChange={this.handleFieldChange}\n                                        style={{ marginBottom: \"15px\", marginTop: \"40px\" }}\n                                        type=\"text\"\n                                        placeholder=\"Username\" />\n                                    <input\n                                        className=\"input-text\"\n                                        name='loginPassword'\n                                        value={this.state.loginPassword}\n                                        onChange={this.handleFieldChange}\n                                        style={{ marginBottom: \"0px\" }}\n                                        type=\"password\"\n                                        placeholder=\"Password\" />\n                                </div>\n                                <div className=\"signin-button\" onClick={this.handleLoginClick}>Login</div>\n                                <p className=\"register-text\" style={{ textAlign: 'center' }} onClick={this.props.toggleRegisterDropDown}>\n                                    Not registered? <em className=\"create-account\">Create an account</em>\n                                </p>\n                            </div>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStoreToProps = reduxStore => ({\n    errors: reduxStore.errors,\n    user: reduxStore.user.user\n})\n\nexport default connect(mapStoreToProps)(LoginDropDown);","// *----------* React app *----------*\nimport React, { Component } from 'react'\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Router *----------*\nimport { withRouter } from 'react-router-dom';\n\n// *----------* Styling *----------*\nimport './ProfileComponent.css'\nimport { CSSTransition } from 'react-transition-group';\n\n/*\n    Profile Icon\n    When Clicked Drop down menu\n        * Profile Page (Shows saved summoner Page + favorites + reviews)\n        * Settings\n        * Theme\n*/\n\nclass ProfileComponent extends Component {\n    state = {\n        showMenu: false,\n    }\n\n    componentDidMount(){\n        // animate welcome user\n\n    }\n\n    handleIconClick = () => {\n        this.setState({ showMenu: !this.state.showMenu })\n    }\n\n    handleProfileClick = () => {\n        this.props.history.push('/profile');\n        this.setState({\n            showMenu:false\n        })\n    }\n\n    handleThemeClick = () => {\n        console.log('Theme change!');\n    }\n\n    handleSettingsClick = () => {\n\n    }\n\n    handleLogoutClick = () => {\n        this.props.dispatch({type:'LOGOUT'});\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"profile-icon\" onClick={this.handleIconClick} />\n                <CSSTransition\n                    in={this.state.showMenu}\n                    appear={true}\n                    timeout={500}\n                    classNames=\"fade\"\n                    mountOnEnter\n                    unmountOnExit\n                >\n                    <div className='menu'>\n                        <div className='option profile' onClick={this.handleProfileClick}>\n                            Profile\n                        </div>\n                        <div className='option theme'>\n                            Theme\n                        </div>\n                        <div className='option settings'>\n                            Settings\n                        </div>\n                        <div onClick={this.handleLogoutClick} className='option logout'>\n                            Logout\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        )\n    }\n}\n\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user.user\n})\n\nexport default withRouter(connect(mapStoreToProps)(ProfileComponent));","// *----------* Create App *----------*\nimport React, { Component } from 'react';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n// *----------* Styling *----------*\nimport { CSSTransition } from 'react-transition-group';\nimport './ReviewDropDown.css'\n\nclass ReviewDropDown extends Component {\n    state = {\n        rating: 3,\n        reviewContent: ''\n    }\n\n    handleSubmitDidClick = () => {\n        // this.props.dispatch({\n        //     type: 'POST_SUBMISSION',\n        //     payload: {\n        //         rating: this.state.reviewMessage,\n        //         content: this.state.reviewContent\n        //     }\n        // })\n\n        // Trigger unmount animation\n        // this.props.toggleReviewForm();\n        console.log('Shipping ', this.state);\n        // summonerName, id, rating, reviewContent\n        this.props.dispatch({\n            type:'POST_REVIEW',\n            payload: {\n                summonerName: this.props.summonerName,\n                id: this.props.userId,\n                rating: this.state.rating,\n                reviewContent: this.state.reviewContent\n            }\n        })\n\n        this.props.disableUserReview();\n\n    }\n\n    handleRatingClick = (rating) => {\n        \n        this.setState({\n            rating: rating\n        })\n\n        console.log('Rating set to', this.state.rating);\n        \n    }\n\n    handleInputChange = (event) =>{\n        this.setState({\n            reviewContent: event.target.value\n        })\n    }\n\n    ratingRuleFor = (rating) => {\n        return (this.state.rating == rating)? 'ratingSelected' : 'rating'\n    }\n\n\n\n    render() {\n\n        return (\n            <CSSTransition\n                in={this.props.showReviewForm}\n                appear={true}\n                timeout={1000}\n                classNames=\"review\"\n                mountOnEnter\n                unmountOnExit\n            // onExiting={()=>console.log(` Login Exiting!`)}\n            // onEntering={()=>console.log(` Login Entering!`)}\n            // onExiting={() => console.log(\"Leaving\")}\n            >\n                <div>\n                    <div className='create-review-container'>\n                        {/* Ratings */}\n                        <p className='ratings'>\n                            <em className={this.ratingRuleFor(1)} onClick={()=>this.handleRatingClick(1)}>\n                                1\n                            </em>\n                            <em className={this.ratingRuleFor(2)}  onClick={()=>this.handleRatingClick(2)}>\n                                2\n                            </em>\n                            <em className={this.ratingRuleFor(3)}  onClick={()=>this.handleRatingClick(3)}>\n                                3\n                            </em>\n                            <em className={this.ratingRuleFor(4)}  onClick={()=>this.handleRatingClick(4)}>\n                                4\n                            </em>\n                            <em className={this.ratingRuleFor(5)}  onClick={()=>this.handleRatingClick(5)}>\n                                5\n                            </em>\n                        </p>\n\n                        {/* Message */}\n                        <textarea  \n                            maxLength=\"25\" \n                            value={this.state.reviewContent} \n                            className='review-message' \n                            type=\"text\" \n                            placeholder='ex. Good Map Awareness' \n                            onChange={this.handleInputChange}/>\n                        {/* Submit */}\n                        <div className='review-submit-button' onClick={this.handleSubmitDidClick}>\n                        Submit\n                    </div>\n                    </div >\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default connect()(ReviewDropDown);","// *----------* React *----------*\nimport React, { Component } from 'react';\n\n// *----------* Router *----------*\nimport { withRouter } from 'react-router-dom';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Page components *----------*\nimport LoginButton from '../LoginButton/LoginButton';\nimport LoginDropDown from '../LoginDropDown/LoginDropDown';\nimport ProfileComponent from '../ProfileComponent/ProfileComponent';\n\n// *----------* Components *----------*\nimport ReviewDropDown from './ReviewDropDown/ReviewDropDown';\n\n// *----------* Styling *----------*\nimport './Nav.css';\nimport { CSSTransition } from 'react-transition-group';\n\n//  {/* Show this link if they are logged in or not,\n//         but call this link 'Home' if they are logged in,\n//         and call this link 'Login / Register' if they are not */}\n//         {/* Show the link to the info page and the logout button if the user is logged in */}\n//         {/* Always show this link since the about page is not protected */}\n\n\n// Can be refractored into login button!\nclass Nav extends Component {\n  state = {\n    showReviewForm: false,\n    appearLogin: false,\n    appearRegister: false\n  }\n\n  toggleLoginDropDown = () => {\n    // console.log(`DROPDOWN!`);\n    this.setState({\n      appearLogin: !this.state.appearLogin,\n    })\n\n    // If either forms open, close if login pressed\n    if (this.state.appearRegister || this.state.appearLogin) {\n      this.setState({\n        appearRegister: false,\n        appearLogin: false,\n      })\n    } else if (!this.state.appearRegister || !this.state.appearLogin) {\n      this.setState({\n        appearLogin: true,\n      })\n    }\n  }\n\n  toggleRegisterDropDown = () => {\n    this.setState({\n      appearRegister: !this.state.appearRegister,\n      appearLogin: !this.state.appearLogin,\n    })\n  }\n\n  handleReviewPlayerClick = () => {\n    // Send request to saga -> post review -> fetch reviews\n    this.setState({\n      showReviewForm: !this.state.showReviewForm\n    })\n  }\n\n  canLeaveReview = () => {\n    // Check if this user has reviewed the current summoner being displayed\n    const didReview = (this.props.user.reviews.map(review => review.reviewed_summonerName)\n      .indexOf(this.props.summoner.summonerName) > -1);\n\n    // console.log(`DID REVIEW = ${didReview}`);\n    // console.log(this.props.summoner.summonerName, this.props.user.user.summoner_Name);\n    console.log(this.props.user.user.id,!didReview,this.props.summoner.summonerName != this.props.user.user.summoner_Name,this.props.summonerDataDidLoad);\n\n\n    if (this.props.user.user.id && !didReview && (this.props.summoner.summonerName != this.props.user.user.summoner_Name) && this.props.summonerDataDidLoad) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"nav\">\n          {/* If user is loged in show profile Component */}\n          <div\n            className=\"logo\"\n            onClick={() => {\n              this.props.history.push('/');\n            }}\n            style={{ cursor: 'pointer' }}\n          />\n\n          {this.props.user.user.id ?\n            // {this.props.summonerDataDidLoad ? () : ()}\n            /* If true */\n            (\n              <div style={{display: 'flex'}}>\n                {\n                  this.canLeaveReview() &&\n                  <div className='review-player' onClick={this.handleReviewPlayerClick}>\n                      review player\n                  </div>\n                }\n                <ProfileComponent />\n              </div>\n            ) :\n\n            /* If false */\n            (<div>\n              <LoginButton toggleLoginDropDown={this.toggleLoginDropDown} />\n              <CSSTransition\n                in={this.state.appearLogin}\n                appear={true}\n                timeout={500}\n                classNames=\"fade\"\n                mountOnEnter\n                unmountOnExit\n              >\n                {(state) => (<LoginDropDown toggleLoginDropDown={this.toggleLoginDropDown} toggleRegisterDropDown={this.toggleRegisterDropDown} />)}\n              </CSSTransition>\n              <CSSTransition\n                in={this.state.appearRegister}\n                appear={true}\n                timeout={500}\n                classNames=\"fade\"\n                mountOnEnter\n                unmountOnExit\n              >\n                {(state) => (<LoginDropDown register={this.state.appearRegister} toggleLoginDropDown={this.toggleLoginDropDown} toggleRegisterDropDown={this.toggleRegisterDropDown} />)}\n              </CSSTransition>\n            </div>\n            )}\n        </div>\n        <ReviewDropDown \n          summonerName={this.props.summoner.summonerName} \n          userId={this.props.user.user.id} \n          disableUserReview={()=>this.setState({\n            showReviewForm: false\n          })}\n          showReviewForm={this.state.showReviewForm}\n          />\n      </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  summoner: state.summoner.summoner,\n  summonerDataDidLoad: state.summoner.isLoaded\n});\n\nexport default withRouter(connect(mapStateToProps)(Nav));","// *----------* Create React *----------*\nimport React, { Component } from 'react';\nimport './HomePage.css';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Router *----------*\nimport { withRouter } from \"react-router\";\n\n// const themes = {\n//     light:{\n//         primary:,\n//         secodary:,\n//         background:,\n//         text:\n//     },\n//     dark:{\n//         primary:,\n//         secodary:,\n//         background:,\n//         text:\n//     }\n// }\n\nclass HomePage extends Component {\n    state = {\n        usernameInput: '',\n        selectedRegion: 'NA',\n        isSearching: false,\n\n    }\n\n    componentDidMount() {\n        console.log('HomePage mounted');\n    }\n\n    componentWillMount() {\n        console.log('will mount');\n\n    }\n\n    handleChange = (event) => {\n        this.setState(\n            {\n                usernameInput: event.target.value\n            }\n        )\n    }\n\n    handleSubmissionClick = () => {\n\n        // Validate query\n\n        // regular expression use to validate summoner names \n        //          *** NOT OPTIMIZED FOR JS YET ***\n        // const regex = RegExp('^[-\\w\\.\\$@\\*\\!]{1,16}$');\n        // const nameIsValidated = regex.test(this.state.usernameInput);\n\n        // Clear whatever state in redux\n        // this.props.dispatch({ type: 'RESET_DATA' })\n\n        // create query object\n        const queryParameters = { summonerName: this.state.usernameInput, region: this.state.selectedRegion }\n\n        // Dispatch query to redux --> API Requests need to be made on server side because of CORS & process.env only accessible in node\n        console.log('Preparing to dispatch', queryParameters);\n        // console.log(this.props.history);\n\n        this.props.dispatch({ type: 'FETCH_SUMMONER', payload: queryParameters, history: this.props.history })\n\n        // Set state to searching\n        this.setState({\n            isSearching: true\n        })\n\n\n\n        // this.props.history.push(`/search/summonerName=${this.state.usernameInput}`);\n\n        // Clear input field\n        // this.setState(\n        //     {\n        //         usernameInput: ''\n        //     }\n        // )\n\n    }\n\n    handleLoading = () => {\n\n        const isSearching = this.state.isSearching;\n\n        if (isSearching) {\n            return (\n                <div className='helix-container'>\n                    <div className=\"bouncing-loader\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                    {/* <div className=\"bouncing-loader-white\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div> */}\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ justifyContent: 'center' }}>\n\n                    <p className=\"DisplayText\"> Helix<em>.GG</em></p>\n                    <div className=\"searchBar\">\n                        <input className='searchForm' onChange={this.handleChange} value={this.state.usernameInput} type=\"text\" placeholder=\"Search summoner\" spellCheck=\"false\">\n                        </input>\n                        <div className=\"searchButton\" onClick={this.handleSubmissionClick}>.GG</div>\n                    </div>\n\n\n                </div>\n                {this.handleLoading()}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect()(HomePage));","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    {/* &copy; Prime Digital Academy */}\n  </footer>\n);\n\nexport default Footer;\n","// *----------* React app *----------*\nimport React, { Component } from 'react';\n\n// *----------* Styling *----------*\nimport './ReviewListItem.css';\n\nclass ReviewListItem extends Component {\n\n    hasContent = () => {\n        if (this.props.review.content === '') {\n            return false;\n        }\n        return true;\n    }\n\n    hasReviewerIdentity = () => {\n        if (this.props.review.summoner_Name) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        // review = this.props.review\n        return (\n            <div>\n                {\n                    this.hasContent() ? (\n                        (<div \n                        className='review-cell'\n                        style={{\n                            backgroundColor: `${(this.props.review.rating < 3) ? ('#f83c6c'):('#00adb5')}`,\n                            borderColor: `${(this.props.review.rating < 3) ?  ('#f83c6c') : ('#00adb5')}`,\n                            boxShadow: `${(this.props.review.rating < 3) ? ('0px 2px #7c1d35') : ('0px 2px #006368')}`\n                        }} \n                        \n                        >\n                            {/* Reviewer */}\n\n                            <p className='reviewer-text'>\n                                {this.hasReviewerIdentity() ? `${this.props.review.summoner_Name}:` : 'Anonymous:'}\n                            </p>\n\n                            {/* Rating /  Content */}\n\n                            <div className='review-content'>\n                                {this.props.review.content}\n                            </div>\n\n                            <div className={`cell-rating${this.props.review.rating}`}>\n                                {this.props.review.rating}\n                            </div>\n                        </div>)\n                    ) : (\n                            (<div className='review-cell-rating'>\n                                {/* Reviewer */}\n\n                                <p className='reviewer-text'>\n                                    {this.hasReviewerIdentity() ? `${this.props.review.summoner_Name}:` : 'Anonymous:'}\n                                </p>\n\n                                {/* Rating /  Content */}\n                                <div className={`cell-rating${this.props.review.rating}`}>\n                                    {this.props.review.rating}\n                                </div>\n                            </div>)\n                        )\n                }\n            </div>\n        )\n    }\n}\n\nexport default ReviewListItem;","// *----------* React App *----------*\nimport React, { Component } from 'react'\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux'\n\n// *----------* Page components *----------*\nimport ReviewListItem from './ReviewListItem/ReviewListItem'\n\n// *----------* Styling *----------*\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './SummonerReviewComponent.css'\n\nclass SummonerReviewComponent extends Component {\n    render() {\n\n        return (\n            <div>\n                <p className='recent-reviews'>\n                    Recent Reviews\n            </p>\n                <div className='review-container'>\n                    {(this.props.reviews.length == 0) ? (\n                        <div className='review-container-empty'>\n                            It's empty in here\n                        </div>\n                    ) : (\n                            <div>\n                                {this.props.reviews.map((review, index) => (\n\n                                    <ReviewListItem key={index} review={review} />\n                                ))\n                                }\n                            </div>\n                        )}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStoreToProps = store => ({\n    reviews: store.summoner.reviews\n})\n\nexport default connect(mapStoreToProps)(SummonerReviewComponent);","// *----------* React App *----------*\nimport React, { Component } from 'react';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Page Components *----------*\n// import ReviewDropDown from './ReviewDropDown/ReviewDropDown';\nimport SummonerReviewComponent from './SummonerReviewComponent/SummonerReviewComponent';\n\n// *----------* Styling *----------*\nimport './SummonerSummary.css'\n\nclass SummonerSummary extends Component {\n    state = {\n        showReviewForm: false,\n    }\n\n    handleFavoriteClick = () => {\n        // Send request to saga -> set favorites -> fetchFavorites\n        this.props.dispatch({\n            type: 'POST_FAVORITE_SUMMONER',\n            payload: {\n                userId: this.props.user.user.id,\n                summonerName: this.props.summoner.summoner.summonerName,\n                profileIcon: this.props.summoner.summoner.profileIcon,\n            }\n        })\n    }\n\n    canFavorite = () => {\n        // If user already favorited the displayed summoner, do not give ability to favorite\n        const favorites = this.props.user.favorites.map(player=>{\n            return player.summoner_Name;\n          });\n\n        if ((favorites.indexOf(this.props.summoner.summoner.summonerName) > -1) && this.props.user.user.id) {\n            return false\n        } else if (!this.props.user.user.id) {\n            return false\n        }\n        else {\n            return true\n        }\n    }\n\n    hasData = () => {\n        if (this.props.summoner.summonerHistory.hasOwnProperty('matchResults')) {\n            return true;\n        }\n        return false;\n    }\n\n    render() {\n\n        const { wins, losses } = (this.hasData()) ? this.props.summoner.summonerHistory.matchResults : { wins: 3, losses: 1 };\n\n        return (\n            <div className='summary-container'>\n                <div className='column1'>\n\n                    {/* Icon / rating */}\n                    <div style={{ backgroundImage: `url(${this.props.summoner.summoner.profileIcon})` }} className='summonerImage' />\n\n                    {/* Summoner Name / rank / Level */}\n                    <p className='summoner-label'> {\n                        this.props.summoner.summoner.summonerName}\n\n                        {/* Favorite */}\n                        {this.canFavorite() &&\n                            <em className='favorite-player' onClick={this.handleFavoriteClick}> ★ </em>\n                        }\n                    </p>\n\n                    <p className='summoner-rank'>\n                        {this.props.summoner.summoner.rank}\n                    </p>\n\n                </div>\n                <div className='column3'>\n                    {/* Reviews */}\n                    <SummonerReviewComponent />\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStoreToProps = store => ({\n    summoner: store.summoner,\n    user: store.user\n})\n\nexport default connect(mapStoreToProps)(SummonerSummary);","// *----------* CRA *----------*\nimport React from 'react';\n\n// *----------* Styling *----------*\nimport './TopChampionItem.css'\n\nconst TopChampionItem = (props) => {\n    return (\n        <div className='champion-cell' >\n            {/* Icon */}\n            <div className='champion-cell-image' style={{ backgroundImage: `url(${props.champion.icon})` }} />\n\n            {/* Name */}\n            <div className='champion-cell-name'>\n                {props.champion.champion}\n            </div>\n\n            <div className='wr-box' style={{width:'25%'}}>\n                <span className='wr-header'>\n                    {props.champion.winrate}\n                </span>\n\n                <div>\n                    <span>\n                        {`${props.champion.totalGamesPlayed}G `}\n                    </span>\n                    <span className='wr-blue'>\n                        {`${props.champion.wins}W `}\n                    </span>\n                    <span className='wr-red'>\n                        {`${props.champion.loses}L`}\n                    </span>\n                </div>\n            </div>\n\n            {/*  */}\n            <div className='kda-box' style={{width:'25%'}}>\n\n                <span className='wr-header'>\n                    {props.champion.kdar}\n                </span>\n\n                <div>\n                    <span className='wr-blue'>\n                        {`${props.champion.averageKills}K `}\n                    </span>\n                    <span className='wr-red'>\n                        {`${props.champion.averageDeaths}D `}\n                    </span>\n                    <span >\n                        {`${props.champion.averageAssists}A`}\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TopChampionItem;\n","// *----------* CRA *----------*\nimport React from 'react';\n\n// *----------* Page components *----------*\nimport TopChampionItem from './TopChampionItem';\n\n// *----------* Styling *----------*\nimport './TopChampionList.css'\n\nconst TopChampionList = (props) => {\n    return(\n        <div className='top-champions'>\n            {props.champions.map((champion,i) =>(\n                <TopChampionItem key={i} champion={champion}/>\n            ))}\n        </div>\n    );\n}\n\nexport default TopChampionList;","// *----------* React App *----------*\nimport React, { Component } from 'react';\n\n// *----------* Styling *----------*\nimport './SummonerGameSummary.css';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Components *----------*\nimport { ResponsivePie } from '@nivo/pie';\n\n// *----------* Page Components *----------*\nimport TopChampionList from './TopChampionList/TopChampionList';\n\nclass SummonerGameSummary extends Component {\n\n    hasData = () => {\n        if (this.props.summonerHistory.hasOwnProperty('matchResults')) {\n            return true;\n        }\n        return false;\n    }\n    render() {\n\n        const { wins, losses, winrate } = (this.hasData()) ? this.props.summonerHistory.matchResults : { wins: 3, losses: 1, winrate: '75.0%' };\n        const { kills, deaths, assists, kdar } = (this.hasData()) ? this.props.summonerHistory.KDA : { kills: 4, deaths: 5, assists: 1, kdar: '1.00:1' };\n\n\n        return (\n            <div className='game-summary-container'>\n                <div className='wr-kda-container'>\n                    <div className='wr-container'>\n                        <div className='wr-piegraph'>\n                            <ResponsivePie\n                                data={\n                                    [\n                                        {\n                                            \"id\": \"Losses\",\n                                            \"label\": \"Losses\",\n                                            \"value\": losses,\n                                        },\n                                        {\n                                            \"id\": \"Wins\",\n                                            \"label\": \"Wins\",\n                                            \"value\": wins,\n                                        }\n                                    ]\n                                }\n                                margin={{\n                                    \"top\": 0,\n                                    \"right\": 0,\n                                    \"bottom\": 0,\n                                    \"left\": 0,\n                                }}\n                                innerRadius={0.6}\n                                cornerRadius={2}\n                                colors={['#FE4365', '#0CA5B0']}\n                                colorBy=\"id\"\n                                enableRadialLabels={false}\n                                radialLabelsSkipAngle={10}\n                                radialLabelsTextXOffset={6}\n                                radialLabelsTextColor=\"#333333\"\n                                radialLabelsLinkOffset={-24}\n                                radialLabelsLinkDiagonalLength={16}\n                                radialLabelsLinkHorizontalLength={24}\n                                radialLabelsLinkStrokeWidth={1}\n                                radialLabelsLinkColor=\"inherit\"\n                                enableSlicesLabels={false}\n                                slicesLabelsSkipAngle={0}\n                                slicesLabelsTextColor=\"#eeeeee\"\n                                isInteractive={true}\n                                animate={true}\n                                motionStiffness={90}\n                                motionDamping={15}\n\n                            />\n                        </div>\n\n                        {/* Win rate */}\n                        <div className='wr-box'>\n                            <span className='wr-header'>\n                                {winrate}\n                            </span>\n\n                            <div>\n                                <span>\n                                    {`${wins + losses}G `}\n                                </span>\n                                <span className='wr-blue'>\n                                    {`${wins}W `}\n                                </span>\n                                <span className='wr-red'>\n                                    {`${losses}L`}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='kda-box-container'>\n                        <div className='wr-piegraph'>\n                            <ResponsivePie\n                                data={\n                                    [\n                                        {\n                                            \"id\": \"Assists\",\n                                            \"label\": \"Assists\",\n                                            \"value\": assists,\n                                        },\n                                        {\n                                            \"id\": \"Deaths\",\n                                            \"label\": \"Deaths\",\n                                            \"value\": deaths,\n                                        },\n                                        {\n                                            \"id\": \"Kills\",\n                                            \"label\": \"Kills\",\n                                            \"value\": kills,\n                                        }\n                                    ]\n                                }\n                                margin={{\n                                    \"top\": 0,\n                                    \"right\": 0,\n                                    \"bottom\": 0,\n                                    \"left\": 0,\n                                }}\n                                innerRadius={0.6}\n                                cornerRadius={2}\n                                colors={['#eeeeee', '#FE4365', '#0CA5B0']}\n                                colorBy=\"id\"\n                                enableRadialLabels={false}\n                                radialLabelsSkipAngle={10}\n                                radialLabelsTextXOffset={6}\n                                radialLabelsTextColor=\"#333333\"\n                                radialLabelsLinkOffset={-24}\n                                radialLabelsLinkDiagonalLength={10}\n                                radialLabelsLinkHorizontalLength={10}\n                                radialLabelsLinkStrokeWidth={1}\n                                radialLabelsLinkColor=\"inherit\"\n                                enableSlicesLabels={false}\n                                slicesLabelsSkipAngle={0}\n                                slicesLabelsTextColor=\"#eeeeee\"\n                                isInteractive={true}\n                                animate={true}\n                                motionStiffness={90}\n                                motionDamping={15}\n\n                            />\n                        </div>\n                        {/* KDA */}\n                        <div className='kda-box'>\n\n                            <span className='wr-header'>\n                                {kdar}\n                            </span>\n\n                            <div>\n                                <span className='wr-blue'>\n                                    {`${kills}K `}\n                                </span>\n                                <span className='wr-red'>\n                                    {`${deaths}D `}\n                                </span>\n                                <span >\n                                    {`${assists}A`}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='top-champion-container'>\n                    <TopChampionList champions={this.props.summonerHistory.top3ChampData}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStoreToProps = store => ({\n    summonerHistory: store.summoner.summonerHistory,\n    summonerHistoryResults: store.summoner.summonerHistory.matchResults\n})\n\nexport default connect(mapStoreToProps)(SummonerGameSummary);\n","// *----------* CRA *----------*\nimport React from 'react';\n\n// *----------* styling *----------*\nimport './SummonerHistoryItem.css';\n\n/*\n \nchampion: {\n    name: \"Nunu\", \n    icon: \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/champion/Nunu.png\"\n}\n \ncs: 119\nitems: (7) [\n    \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/item/1413.png\", \n    \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/item/3110.png\", \n    \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/item/3047.png\", \n    \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/item/3742.png\", \n    \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/item/1028.png\", \n    \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/item/0.png\", \n    \"http://ddragon.leagueoflegends.com/cdn/9.1.1/img/item/3340.png\"]\nkda: {kills: 8, deaths: 3, assists: 16, kdar: \"8.00:1\"}\nmatchParticipants: (9) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\nresult: true\nrunes: {\n    mainIcon: \"http://ddragon.leagueoflegends.com/cdn/img/perk-images/Styles/7204_Resolve.png\", \n    subIcon: \"http://ddragon.leagueoflegends.com/cdn/img/perk-images/Styles/7202_Sorcery.png\"\n}\nspells: {\n    spell1Icon: \"http://ddragon.leagueoflegends.com/cdn/8.24.1/img/spell/SummonerFlash.png\", \n    spell2Icon: \"http://ddragon.leagueoflegends.com/cdn/8.24.1/img/spell/SummonerSmite.png\"\n}\ntime: \"28m 39s\"\n \n*/\n\nconst SummonerHistoryItem = props => {\n\n    const { champion, cs, items, kda, matchParticipants, result, runes, spells, time } = props.match;\n    console.log(props);\n\n    return (\n        <div className='match-cell'>\n            {/* Result bar */}\n            <div className={`result-bar ${(result) ? \"result-bar-victory\" : \"result-bar-defeat\"}`} />\n\n            {/* Time & result */}\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <div className={`result-status ${(result) ? \"result-text-victory\" : \"result-text-defeat\"}`}>\n                    {\n                        (result) ? \"Victory\" : \"Defeat\"\n                    }\n                </div>\n\n                <div className='match-time'>\n                    {time}\n                </div>\n            </div>\n\n            {/* Champion & Spells */}\n            <div className='champion-container' style={{ display: 'flex', flexDirection: 'column' }}>\n                {/* Champion & spells, 2 columns*/}\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <div className='match-champion-icon' style={{ backgroundImage: `url(${champion.icon})` }} />\n                    {/* spells 2 columns 2 rows */}\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\n\n                        {/* Col 1 (spells) */}\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            {/*  */}\n                            <div className='spell-icon' style={{ backgroundImage: `url(${spells.spell1Icon})` }} />\n                            {/*  */}\n                            <div className='spell-icon' style={{ backgroundImage: `url(${spells.spell2Icon})` }} />\n                        </div >\n\n                        {/* col 2 (runes) */}\n                        <div style={{ display: 'flex', flexDirection: 'column', marginLeft: '5px' }}>\n                            {/*  */}\n                            <div className='spell-icon' style={{ backgroundImage: `url(${runes.mainIcon})` }} />\n                            {/*  */}\n                            <div className='spell-icon' style={{ backgroundImage: `url(${runes.subIcon})` }} />\n                        </div>\n                    </div>\n                </div>\n\n                {/* Champion name */}\n                <div className='match-champion-text'>\n                    {champion.name}\n                </div>\n            </div>\n\n            {/* KDA */}\n            {/* JSS Practice */}\n            <div\n                className='match-kda-container'\n                style={{\n                    display: 'flex',\n                    margin: 'auto 5% auto 5%',\n                    flexDirection: 'column',\n                    fontFamily: 'Krungthep',\n                    textAlign: 'center',\n                    fontSize: '13px',\n                    color: '#eee',\n                    verticalAlign: 'middle',\n                }}>\n\n                {/*  kdar */}\n                <div>\n                    {`${kda.kdar} KDA`}\n                </div>\n\n                {/*  k/d/a */}\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    fontSize: '12px',\n                    textAlign: 'center',\n                    justifyContent: 'center',\n                    letterSpacing: '2px'\n                }}>\n                    <div style={{ color: '#00adb5' }}>\n                        {`${kda.kills} `}\n                    </div>\n                    {\" / \"}\n                    <div style={{ color: '#ff2e63' }}>\n                        {` ${kda.deaths} `}\n                    </div>\n                    {\" / \"}\n                    <div>\n                        {` ${kda.assists}`}\n                    </div>\n                </div>\n\n                <div style={{\n                    fontSize: '10px',\n                    color: '#eeeeee91'\n                }}>\n                    {`${cs} cs`}\n                </div>\n\n            </div>\n\n            {/* Items */}\n\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                width: '125px',\n                height: '60px',\n                margin: '15px 25px 15px auto',\n                justifyContent: 'center',\n                verticalAlign: 'middle'\n            }}>\n\n                {/* Items */}\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'column'\n                }}>\n                    {/* 0-2 */}\n                    <div style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                    }}>\n\n                        <div className='match-item-icon' style={{\n                            backgroundImage: `url(${items[0]})`,\n                        }} />\n\n                        <div className='match-item-icon' style={{\n                            backgroundImage: `url(${items[1]})`,\n                        }} />\n\n                        <div className='match-item-icon' style={{\n                            backgroundImage: `url(${items[2]})`,\n                        }} />\n\n                    </div>\n\n                    {/* 3-5 */}\n                    <div style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        margin: '3.33px 0px;'\n                    }}>\n\n                        <div className='match-item-icon' style={{\n                            backgroundImage: `url(${items[3]})`,\n                        }} />\n\n                        <div className='match-item-icon' style={{\n                            backgroundImage: `url(${items[4]})`,\n                        }} />\n\n                        <div className='match-item-icon' style={{\n                            backgroundImage: `url(${items[5]})`,\n                        }} />\n\n\n                    </div>\n                </div>\n\n                {/* Ward */}\n                <div className='match-item-icon' style={{\n                    backgroundImage: `url(${items[6]})`,\n                    margin: 'auto 2px'\n                }} />\n\n            </div>\n        </div>\n    )\n}\n\nexport default SummonerHistoryItem;","// *----------* CRA *----------*\nimport React from 'react';\n\n// *----------* Components *----------*\nimport SummonerHistoryItem from './SummonerHistoryItem/SummonerHistoryItem'\n\n// *----------* Styling *----------*\nimport './SummonerHistoryList.css'\n\nconst SummonerHistoryList = (props) => {\n    return(\n        <div>\n            {\n                props.matches.map((match,index) => {\n                    return (<SummonerHistoryItem key={index} match={match}/>)\n                })\n            }\n        </div>\n    )\n}\n\nexport default SummonerHistoryList;\n","// *----------* CRA *----------*\nimport React from 'react';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Components *----------*\nimport SummonerHistoryList from './SummonerHistoryList/SummonerHistoryList'\n\n// *----------* styling *----------*\nimport './SummonerHistory.css'\n\nconst SummonerHistory = (props) =>{\n    return(\n        <div className='match-history-container'>\n            <SummonerHistoryList matches={props.matchHistory}/>\n        </div>\n    )\n}\n\nconst mapStoreToProps = store => ({\n    matchHistory: store.summoner.summonerHistory.matchHistory\n})\n\nexport default connect(mapStoreToProps)(SummonerHistory);","// *----------* React App *----------*\nimport React, {Component} from 'react';\n\n// *----------* Redux *----------*\nimport {connect} from 'react-redux';\n\n// *----------* Page Components *----------*\nimport SummonerSummary from './SummonerSummary/SummonerSummary';\nimport SummonerGameSummary from './SummonerGameSummary/SummonerGameSummary';\nimport SummonerHistory from './SummonerHistory/SummonerHistory';\n\n// *----------* Styling *----------*\nimport './SummonerPage.css';\n\n/* \n\n    Responsible for :\n        * displaying Summoner summary (component with reviews)\n        * display tab for normal/ranked components\n            * Summary of past 20 games\n                * Pie graph & top 3 champs  \n            * table for each Cell\n                * cell with summoner icon, kda, items etc...  \n\n*/\n\nclass SummonerPage extends Component{\n    state = {\n        // Data for each queue\n\n    }\n\n    componentWillUnmount(){\n        // Reset data on summoner page unmount so review isnt visible\n        this.props.dispatch({type: 'RESET_DATA'})\n    }\n\n    render(){\n        return(\n            <div className={'container'}>\n\n                {/* Seach Bar */}\n\n                {/* Summary Component*/}\n                <SummonerSummary/>\n\n                {/* Analytics */}\n                < SummonerGameSummary />\n                {/*  */}\n\n                {/* Match History Component*/}\n                <SummonerHistory/>\n            </div>\n        )\n    }\n}\n\nexport default connect()(SummonerPage);","// *----------* CRA *----------*\nimport React, { Component } from 'react';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Styling *----------*\nimport './ProfileReviewsItem.css'\n\n/*\n    Displays\n        Summoner Reviewed\n        Review\n        Rating\n\n    OnClick\n        Shows Review & Rating (editable)\n\n*/\n\nclass ProfileReviewsItem extends Component {\n\n    state = {\n        detailIsVisible: false,\n        itemReview: '',\n        itemRating: '',\n        itemId:'',\n    }\n\n    componentWillMount() {\n        // On mount load state\n        console.log('REVIEW: ', this.props.review);\n\n        this.resetState()\n    }\n\n    resetState = () =>{\n        this.setState({\n            itemReview: this.props.review.content,\n            itemRating: this.props.review.rating,\n            itemId: this.props.review.id\n        })\n    }\n\n    handleSaveClick = () => {\n        // dispatch update\n        console.log('Shipping ', this.state);\n\n        this.props.dispatch({\n            type: 'UPDATE_USER_REVIEW',\n            payload: {\n                reviewId: this.state.itemId,\n                reviewRating: this.state.itemRating,\n                reviewContent: this.state.itemReview,\n                userId: this.props.userId\n            }\n        })\n\n        // close edit window\n        this.setState({\n            detailIsVisible: false\n        })\n        \n    }\n\n    handleDeleteClick = () =>{\n        console.log('Deleting', this.state.itemId);\n        this.props.dispatch({\n            type: 'DELETE_USER_REVIEW',\n            payload: {userId: this.props.userId, reviewId: this.state.itemId}\n        })\n    }\n\n    // Set CSS rule for an element depending on whether or not it is selected\n    ratingRuleFor = (rating) => {\n        return (this.state.itemRating == rating)? 'cell-rating cell-rating-Selected' : 'cell-rating'\n    }\n\n    handleRatingClick = (rating) => (event) => {\n        \n        this.setState({\n            itemRating: rating\n        })\n\n        console.log('Rating set to', this.state.itemRating);\n        \n    }\n\n    handleContentChange = (event) => {\n        this.setState({\n            itemReview: event.target.value\n        })\n    }\n\n\n    render() {\n\n        let cell = (\n            <div className={`reviewCell ${this.state.detailIsVisible ? 'cell-open' : 'cell-closed'}`}\n                style={{\n                    backgroundColor: `${(this.state.itemRating < 3) ? ('#ff2f64') : ('rgb(12, 160, 170)')}`,\n                    boxShadow: `${(this.state.itemRating < 3) ? ('0px 2px #7c1d35') : (' 0px 2px #006368')}`,\n                    transition: 'all .2s'\n                }}\n            >\n                <div className='cell-header'>\n                    {/* Summoner who user reviewed */}\n                    <div className='cell-summoner'>\n                        {this.props.review.reviewed_summonerName}\n                    </div>\n\n                    {/* Close detail */}\n                    <div\n                        className='cell-close-detail'\n                        // On Close click, close detail and reset state\n                        onClick={() => {\n                            this.setState({ detailIsVisible: !this.state.detailIsVisible });\n                            this.resetState();\n                            }}>\n                        {this.state.detailIsVisible ? (\n                            <span className='cell-detail-close'>\n                                ✖\n                            </span>\n                        ) : (\n                                <span className='cell-detail-edit'>\n                                    . . .\n                                </span>\n                            )\n                        }\n                    </div>\n                </div>\n\n                {/* Content */}\n                <div style={{ display: 'flex', width: '100%', justifyContent: 'space-between' }}>\n                    <textarea\n                        className={`cell-content cell-content-${this.state.detailIsVisible ? 'open' : 'closed'}`}\n                        readOnly={!this.state.detailIsVisible}\n                        rows=\"2\"\n                        maxLength={25}\n                        value={this.state.itemReview}\n                        onChange={this.handleContentChange}\n                        spellCheck=\"false\"\n                    />\n\n                    {/* Rating */}\n                    {/* Read Only */}\n                    {!this.state.detailIsVisible &&\n                        <div className={`review-cell-rating${this.state.itemRating}`}>\n                            {this.state.itemRating}\n                        </div>\n                    }\n\n                    {/* Edit */}\n\n                    {\n                        this.state.detailIsVisible &&\n                        <div className='cell-edit-right'>\n                            <p className='cell-ratings'>\n                                <em className={this.ratingRuleFor(1)} onClick={this.handleRatingClick(1)}>\n                                    1\n                                    </em>\n                                <em className={this.ratingRuleFor(2)} onClick={this.handleRatingClick(2)}>\n                                    2\n                                    </em>\n                                <em className={this.ratingRuleFor(3)} onClick={this.handleRatingClick(3)}>\n                                    3\n                                    </em>\n                                <em className={this.ratingRuleFor(4)} onClick={this.handleRatingClick(4)}>\n                                    4\n                                    </em>\n                                <em className={this.ratingRuleFor(5)} onClick={this.handleRatingClick(5)}>\n                                    5\n                                    </em>\n                            </p>\n\n                            <div className='cell-button-container'>\n                                <div className='cell-save-button' onClick={this.handleSaveClick}>\n                                    save\n                                </div>\n                                <div className='cell-delete-button' onClick={this.handleDeleteClick}>\n                                    delete\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n\n        return (\n            <div>\n                {cell}\n            </div>\n        )\n    }\n}\n\nconst mapStoreToProps = store => ({\n    // Children need user's reviews & favorites\n    userId: store.user.user.id\n})\n\nexport default connect(mapStoreToProps)(ProfileReviewsItem);","// *----------* CRA *----------*\nimport React from 'react';\n\n// *----------* Components *----------*\nimport ProfileReviewsItem from './ProfileReviewsItem/ProfileReviewsItem'\n\n// *----------* Styling *----------*\nimport './ProfileReviewsList.css'\n\nconst ProfileReviewsList = (props) => {\n    return(\n        <div>\n            {\n                props.reviews.map((review,index)=>{\n                    return(<ProfileReviewsItem key={index} review={review}/>)\n                })\n            }\n        </div>\n    )\n}\n\nexport default ProfileReviewsList;","// *----------* CRA *----------*\nimport React, { Component } from 'react';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Styling *----------*\nimport './ProfileFavoriteItem.css'\n\nclass ProfileFavoriteItem extends Component{\n\n    handleDeleteClick = () =>{\n        // Dispatch Delete action\n        this.props.dispatch({\n            type:'DELETE_FAVORITE',\n            payload: {\n                id: this.props.favorite.id,\n                userId: this.props.favorite.user_id\n            }\n        })\n    }\n\n    render(){\n        return(\n            <div className='favorite-cell'>\n                {/* {this.props.favorite} */}\n                <div className='favorite-icon' style={{backgroundImage: `url(${this.props.favorite.summoner_profile_icon})`}} />\n\n                <div className='favorite-summoner'>\n                    {this.props.favorite.summoner_Name}\n                </div>\n\n                <div className='favorite-remove' onClick={this.handleDeleteClick}>\n                    Remove\n                </div>\n            </div>\n        );\n    }\n}\n\n// Can be passed down from profile page props\nconst mapStoreToProps = store => ({\n    // Children need user's reviews & favorites\n    userId: store.user.user.id\n})\n\nexport default connect(mapStoreToProps)(ProfileFavoriteItem);","// *----------* CRA *----------*\nimport React, { Component } from 'react';\n\n// *----------* Components *----------*\nimport ProfileFavoriteItem from './ProfileFavoriteItem/ProfileFavoriteItem'\n\n// *----------* Styling *----------*\nimport './ProfileFavoritesList.css'\n\nconst ProfileFavoritesList = (props) => {\n    return(\n        <div className='profile-favorites-list'>\n            {\n                props.favorites.map((favorite,index)=>{\n                    return(<ProfileFavoriteItem key={index} favorite={favorite}/>)\n                })\n            }\n        </div>\n    )\n}\n\nexport default ProfileFavoritesList;","// *----------* CRA *----------*\nimport React, { Component } from 'react';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Components *----------*\nimport ProfileReviewsList from './ProfileReviewsList/ProfileReviewsList'\nimport ProfileFavoritesList from './ProfileFavoritesList/ProfileFavoritesList';\n\n// *----------* Styling *----------*\nimport './ProfilePage.css'\n\n\n\nclass ProfilePage extends Component {\n\n    componentDidMount(){\n        // this.props.dispatch({\n        //     type: 'FETCH_USER'\n        // })\n    }\n\n    render() {\n        console.log(this.props.reviews);\n        console.log(this.props.favorites);\n\n        return (\n            <div>\n                <div className='profile-header'>\n                    Profile Page\n                </div>\n                <div style={{ display: 'flex' }}>\n                    <div className='profile-list-container profile-reviews'>\n                        <div className='profile-reviews-header'>\n                            Reviews\n                        </div>\n                        <ProfileReviewsList reviews={this.props.reviews} />\n                    </div>\n\n                    <div className='profile-list-container profile-favorites'>\n                        <div className='profile-reviews-header'>\n                            Favorites\n                        </div>\n                        <ProfileFavoritesList favorites={this.props.favorites}/>\n                        \n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStoreToProps = store => ({\n    // Children need user's reviews & favorites\n    reviews: store.user.reviews,\n    favorites: store.user.favorites\n})\n\nexport default connect(mapStoreToProps)(ProfilePage);\n\n","\nimport React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport HomePage from '../HomePage/HomePage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = HomePage;\n  } \n\n  // else {\n  //   // the the user is not logged in and the mode is not 'login'\n  //   // show the RegisterPage\n  //   ComponentToShow = RegisterPage;\n  // }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)","// *----------* Create App *----------*\nimport React, { Component } from 'react';\nimport './App.css';\n\n// *----------* Router *----------*\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\n// *----------* Redux *----------*\nimport { connect } from 'react-redux';\n\n// *----------* Page Components *----------*\nimport Nav from '../Nav/Nav';\nimport HomePage from '../HomePage/HomePage'\nimport Footer from '../Footer/Footer';\nimport SummonerPage from '../SummonerPage/SummonerPage';\nimport ProfilePage from '../ProfilePage/ProfilePage';\n\n// Consider Deleting\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n// import AboutPage from '../AboutPage/AboutPage';\n// import UserPage from '../UserPage/UserPage';\n// import InfoPage from '../InfoPage/InfoPage';\n// import { link } from 'fs';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Nav will need access to profile route */}\n\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home*/}\n            <Redirect exact from=\"/\" to=\"/home\" />\n\n            <Route path='/home' component={HomePage} />\n\n            {/* If data is loaded on when directing to '/search' go to summonerPage \n                else return home */}\n\n            <Route path='/search' render={()=> (\n              this.props.summoner.isLoaded ? ( <SummonerPage/>) : ( <Redirect to=\"/home\"/> )\n            )\n          }/>\n\n            {/* Visiting /search will result in an error page, otherwise it will render the profile page of the user */}\n            <ProtectedRoute path='/profile' component={ ProfilePage }/>\n\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    )\n  }\n}\n\nconst mapStoreToProps = store => ({\n  summoner: store.summoner\n})\n\nexport default connect(mapStoreToProps)(App);","import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","\n\nconst userReducer = (state = { user: {}, favorites: [], reviews: [], userSummonerName:''}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state, user: action.payload };\n    case 'UNSET_USER':\n      return { ...state, user: {} };\n    case 'SET_FAVORITES':\n      return { ...state, favorites: action.payload }\n    case 'SET_USER_REVIEWS':\n      return { ...state, reviews: action.payload }\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at: state.user\n// In \nexport default userReducer;\n","\n// Going to need to trim summoner data somewhere\n\n\nconst summonerReducer = (state = {summoner:{},summonerHistory:{}, reviews:[], isLoaded: false}, action) => {\n    switch (action.type) {\n      case 'SET_SUMMONER':\n        return {...state, summoner: action.payload} ;\n      case 'SET_SUMMONER_HISTORY':\n        return {...state, summonerHistory: action.payload, isLoaded: true}\n      case 'RESET_DATA':\n        return {summoner:{},summonerHistory:{}, reviews:[], isLoaded: false}\n      case 'SET_SUMMONER_REVIEWS':\n        return {...state, reviews: action.payload}\n      default:\n        return state;\n    }\n  };\n\n  export default summonerReducer;\n  ","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport summoner from './summonerReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  summoner, // contains all relavent summoner info\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n\n    // favorites\n\n    // reviews\n\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put as dispatch, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield dispatch({ type: 'SET_USER', payload: response.data });\n\n    // After user signed in, fetch all user data\n    yield dispatch({type:'FETCH_FAVORITES', payload: response.data.id});\n    yield dispatch({ type: 'FETCH_USER_REVIEWS', payload: response.data.id})\n\n\n\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// Post a review under user\nfunction* postReview(action){\n  try {\n\n    // Destructure data from payload\n    const {summonerName, id, rating, reviewContent} = action.payload;\n\n    // Send request to API\n    yield axios.post('/api/user/review', {summonerName, id, rating, reviewContent})\n\n    // Notify user of success/failure\n\n\n    // Update user reviews\n    yield dispatch({ type: 'FETCH_USER_REVIEWS', payload:id})\n\n    // Update summoner Reviews\n    yield dispatch({type:'FETCH_SUMMONER_REVIEWS', payload:summonerName})\n\n    // console.log(rating,reviewContent,summonerName);\n\n  } catch (error) {\n    console.log(`Error in postReview`, error);\n  }\n}\n\nfunction* updateUserReview(action){\n  try {\n    \n    //\n    const {reviewContent, reviewId, reviewRating, userId} = action.payload;\n\n    // Put request\n    yield axios.put(`/api/user/review/`, {reviewContent, reviewId, reviewRating});\n\n    // Update reducer\n    yield dispatch({ type: 'FETCH_USER_REVIEWS', payload:userId});\n\n  } catch (error) {\n    console.log(`error in updateUserReview: `, error);\n  }\n}\n\nfunction* deleteUserReview(action){\n  try {\n\n    const {userId, reviewId} = action.payload;\n\n    // Dispatch request to delete review from DB\n    yield axios.delete(`/api/user/delete/${reviewId}`);\n\n    // Update redux\n    yield dispatch({ type: 'FETCH_USER_REVIEWS', payload:userId})\n\n  } catch (error) {\n    console.log('Error in deleteUserReview: ', error);\n  }\n}\n\n// Fetch user's reviews\nfunction* fetchUserReviews(action){\n  try {\n\n    const id = action.payload;\n\n    // pass query params to API call\n    const reviewRespnse = yield axios.get(`/api/user/${id}/reviews`);\n\n    yield dispatch({\n      type: 'SET_USER_REVIEWS',\n      payload: reviewRespnse.data\n    })\n\n  } catch (error) {\n    console.log(`Error in fetchUserReviews:`, error);\n  }\n}\n\n// Post a favorite for current user\nfunction* postFavoriteSummoner(action){\n  try {\n\n    console.log(action.payload);\n    \n    // Data from action\n    const {userId, summonerName, profileIcon} = action.payload;\n\n    // post data to ../../favorite endpoint\n    yield axios.post('/api/user/favorite', {userId, summonerName, profileIcon})\n\n    // notify user of update (?)\n\n    // Dispatch to fetch favorites\n    yield dispatch({type:'FETCH_FAVORITES',payload: userId})\n\n  } catch (error) {\n    console.log(`Error in postFavoriteSummoner:`, error);\n  }\n}\n\n// Fetch a user's favorite summoners\nfunction* fetchFavorites(action){\n  try {\n\n    //\n    const userId = action.payload;\n\n    //\n    const favoritesResponse = yield axios.get(`/api/user/${userId}/favorites`);\n\n    const favorites = favoritesResponse.data;\n\n    console.log(favorites);\n\n    //\n    yield dispatch({type:'SET_FAVORITES',payload: favorites});\n\n  } catch (error) {\n    console.log(`Error in fetchFavorites:`, error);\n  }\n}\n\n//\nfunction* deleteFavorite(action){\n  try {\n    //decon. action\n    const {id, userId} = action.payload;\n\n    // Request delete\n    yield axios.delete(`/api/user/favorite/delete/${id}`);\n\n    // update favorites\n    yield dispatch({type:'FETCH_FAVORITES',payload: userId})\n\n  } catch (error) {\n    console.log(`Error in deleteFavorite:`, error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n\n  yield takeLatest('POST_REVIEW', postReview);\n  yield takeLatest('DELETE_USER_REVIEW', deleteUserReview);\n  yield takeLatest('UPDATE_USER_REVIEW', updateUserReview);\n  yield takeLatest('FETCH_USER_REVIEWS', fetchUserReviews);\n\n  yield takeLatest('POST_FAVORITE_SUMMONER', postFavoriteSummoner);\n  yield takeLatest('FETCH_FAVORITES', fetchFavorites);\n  yield takeLatest('DELETE_FAVORITE', deleteFavorite);\n}\n\nexport default userSaga;\n","// *----------* Axios *----------*\nimport axios from 'axios';\n\n// *----------* Saga *----------*\nimport { put as dispatch, takeLatest, takeEvery } from 'redux-saga/effects';\n\n// *----------*  *----------*\nfunction* fetchSummoner(action) {\n    try {\n        // TODO PUSH TO LOADING SCREEN\n\n        // Reset Data\n        yield dispatch({type:'RESET_DATA'})\n        // yield dispatch({ type: 'SET_SUMMONER', payload: {}})\n        // yield dispatch({ type: 'SET_SUMMONER_HISTORY', payload: {}})\n\n        // Prepare data for request\n        const summonerName = action.payload.summonerName;\n        const region = action.payload.region;\n\n        // Request sent to summoner API to query riot games API with summoner name\n        const summonerResponseData = yield axios.get(`/api/summoner/${region}/${summonerName}`);\n\n        // Fetch reviews about summoner\n        yield dispatch({type:'FETCH_SUMMONER_REVIEWS', payload: summonerName})\n\n        // Also dispatch action to FETCH_SUMMONER_HISTORY.\n        // This will in turn dispatch history results to summonerReducer\n        yield dispatch(\n            {\n            type:'FETCH_SUMMONER_HISTORY',\n            payload:{\n                summonerName: summonerName,\n                region: region,\n                queueType: 'Normal', // Default\n                // history: action.payload.history\n                },\n            history: action.history\n            })\n\n\n        // Dispatch returned summoner to summonerReducer\n        yield dispatch({ type: 'SET_SUMMONER', payload: summonerResponseData.data })\n        \n    } catch (error) {\n        console.log(`Summoner get request failed:`, error);\n    }\n}\n\nfunction* fetchSummonerHistory(action) {\n    try {\n        \n        console.log('Fetch summoner history');\n        // Prepare data for request\n        const summonerName = action.payload.summonerName;\n        const region = action.payload.region;\n        const queueType = action.payload.queueType\n\n        // Request server to query riot games API with summoner name from client\n        const summonerHistoryResponse = yield axios.get(`/api/summoner/${region}/${summonerName}/${queueType}`)\n\n        // Dispatch returned summoner to summonerReducer\n        yield dispatch({ type: 'SET_SUMMONER_HISTORY', payload: summonerHistoryResponse.data })\n\n        //\n        yield action.history.push(`/search/summonerName=${summonerName}`);\n\n    } catch (error) {\n        console.log(`SummonerHistory get request failed:`, error);\n    }\n}\n\n//\nfunction* fetchSummonerReviews(action){\ntry {\n\n    //\n    const summonerName = action.payload;\n    console.log(summonerName);\n\n    // Make request to API to fetch all reviews of summoner\n    const reviewsResponse = yield axios.get(`/api/summoner/reviews/${summonerName}`);\n\n    // \n    yield dispatch({type:'SET_SUMMONER_REVIEWS', payload: reviewsResponse.data})\n\n} catch (error) {\n    \n}\n}\n\nfunction* summonerSaga() {\n    yield takeEvery('FETCH_SUMMONER', fetchSummoner);\n    yield takeLatest('FETCH_SUMMONER_HISTORY', fetchSummonerHistory);\n    yield takeLatest('FETCH_SUMMONER_REVIEWS', fetchSummonerReviews);\n}\n\n\nexport default summonerSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport summonerSaga from './summonerSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    summonerSaga()\n  ]);\n}\n","\n// *----------* Create react *----------*\nimport React from 'react';\nimport App from './components/App/App';\n\n// *----------* Redux *----------*\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\n// *----------* Router *----------*\nimport ReactDOM from 'react-dom';\n\n// *----------* Reducers & Stores *----------*\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if youre in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // Question: Saga middleware uses the rootreducer? rootsaga contains all other reducers?\n\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);"],"sourceRoot":""}